/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const flipButton = document.querySelector('#flip-button');\nconst optionContainer = document.querySelector('.option-container');\nconst gamesBoardContainer = document.querySelector('#gamesboard-container');\nconst startButton = document.querySelector('#start-button');\nconst infoDisplay = document.querySelector('#info');\nconst width = 10;\n\nlet angle = 0;\nfunction flip() {\n  const optionShips = Array.from(optionContainer.children);\n  angle = angle === 0 ? 90 : 0;\n  optionShips.forEach((optionShip) => {\n    optionShip.style.transform = `rotate(${angle}deg)`;\n  });\n}\nflipButton.addEventListener('click', flip);\n\nfunction createBoard(color, user) {\n  const gameBoardContainer = document.createElement('div');\n  gameBoardContainer.classList.add('game-board');\n  gameBoardContainer.style.backgroundColor = color;\n  gameBoardContainer.id = user;\n\n  for (let i = 0; i < width * width; i += 1) {\n    const block = document.createElement('div');\n    block.classList.add('block');\n    block.id = i;\n    gameBoardContainer.append(block);\n  }\n\n  gamesBoardContainer.append(gameBoardContainer);\n}\n\ncreateBoard('transparent', 'player');\ncreateBoard('transparent', 'computer');\n\nclass Ship {\n  constructor(name, length) {\n    this.name = name;\n    this.length = length;\n  }\n}\n\nconst destroyer = new Ship('destroyer', 2);\nconst submarine = new Ship('submarine', 3);\nconst cruiser = new Ship('cruiser', 3);\nconst battleship = new Ship('battleship', 4);\nconst carrier = new Ship('carrier', 5);\n\nconst ships = [destroyer, submarine, cruiser, battleship, carrier];\nlet notDropped;\n\nfunction getValidity(allBoardBlocks, isHorizontal, startIndex, ship) {\n  const validStart = isHorizontal\n    ? startIndex <= width * width - ship.length\n      ? startIndex\n      : width * width - ship.length\n    : startIndex <= width * width - width * ship.length\n    ? startIndex\n    : startIndex - ship.length * width + width;\n\n  const shipBlocks = [];\n\n  for (let i = 0; i < ship.length; i += 1) {\n    if (isHorizontal) {\n      shipBlocks.push(allBoardBlocks[Number(validStart) + i]);\n    } else {\n      shipBlocks.push(allBoardBlocks[Number(validStart) + i * width]);\n    }\n  }\n\n  let valid;\n\n  if (isHorizontal) {\n    shipBlocks.every(\n      (_shipBlock, index) =>\n        (valid =\n          shipBlocks[0].id % width !==\n          width - (shipBlocks.length - (index + 1))),\n    );\n  } else {\n    shipBlocks.every(\n      (_shipBlock, index) =>\n        (valid = shipBlocks[0].id < 90 + (width * index + 1)),\n    );\n  }\n  const notTaken = shipBlocks.every(\n    (shipBlock) => !shipBlock.classList.contains('taken'),\n  );\n\n  return { shipBlocks, valid, notTaken };\n}\n\nfunction addShipPiece(user, ship, startId) {\n  const allBoardBlocks = document.querySelectorAll(`#${user} div`);\n  const randomBoolean = Math.random() < 0.5;\n  const isHorizontal = user === 'player' ? angle === 0 : randomBoolean;\n  const randomStartIndex = Math.floor(Math.random() * (width * width));\n\n  const startIndex = startId || randomStartIndex;\n\n  const { shipBlocks, valid, notTaken } = getValidity(\n    allBoardBlocks,\n    isHorizontal,\n    startIndex,\n    ship,\n  );\n\n  if (valid && notTaken) {\n    shipBlocks.forEach((shipBlock) => {\n      shipBlock.classList.add(ship.name);\n      shipBlock.classList.add('taken');\n    });\n  } else {\n    if (user === 'computer') addShipPiece(user, ship, startId);\n    if (user === 'player') notDropped = true;\n  }\n}\n\nfunction addRandomShipPiece(user, ship, startId) {\n  const allBoardBlocks = document.querySelectorAll(`#${user} div`);\n  const randomBoolean = Math.random() < 0.5;\n  const isHorizontal = randomBoolean;\n  const randomStartIndex = Math.floor(Math.random() * (width * width));\n\n  const startIndex = startId || randomStartIndex;\n\n  const { shipBlocks, valid, notTaken } = getValidity(\n    allBoardBlocks,\n    isHorizontal,\n    startIndex,\n    ship,\n  );\n\n  if (valid && notTaken) {\n    shipBlocks.forEach((shipBlock) => {\n      shipBlock.classList.add(ship.name);\n      shipBlock.classList.add('taken');\n    });\n  } else {\n    addRandomShipPiece(user, ship, startId);\n  }\n}\n\nships.forEach((ship) => {\n  addShipPiece('computer', ship);\n});\n\nlet draggedShip;\nconst allPlayerBlocks = document.querySelectorAll('#player div');\nconst optionShips = Array.from(optionContainer.children);\nconst random = document.querySelector('#randomize-button');\n\nrandom.addEventListener('click', () => {\n  if (document.querySelector('.option-container')) {\n    document.querySelector('.option-container').remove();\n  }\n  document.querySelector('#player').remove();\n  createBoard('transparent', 'player');\n  ships.forEach((ship) => {\n    addRandomShipPiece('player', ship);\n  });\n});\n\nfunction dragstart(e) {\n  notDropped = false;\n  draggedShip = e.target;\n}\n\nfunction dragover(e) {\n  e.preventDefault();\n  const ship = ships[draggedShip.id];\n  highlightArea(e.target.id, ship);\n}\n\nfunction dropShip(e) {\n  const startId = e.target.id;\n  const ship = ships[draggedShip.id];\n  addShipPiece('player', ship, startId);\n  if (!notDropped) {\n    draggedShip.remove();\n  }\n  if (optionContainer.children.length === 0) {\n    document.querySelector('.option-container').remove();\n  }\n}\n\nallPlayerBlocks.forEach((playerBlock) => {\n  playerBlock.addEventListener('dragover', dragover);\n  playerBlock.addEventListener('drop', dropShip);\n});\n\noptionShips.forEach((optionShip) =>\n  optionShip.addEventListener('dragstart', dragstart),\n);\n\nfunction highlightArea(startIndex, ship) {\n  const allBoardBlocks = document.querySelectorAll('#player div');\n  const isHorizontal = angle === 0;\n\n  const { shipBlocks, valid, notTaken } = getValidity(\n    allBoardBlocks,\n    isHorizontal,\n    startIndex,\n    ship,\n  );\n\n  if (valid && notTaken) {\n    shipBlocks.forEach((shipBlock) => {\n      shipBlock.classList.add('hover');\n      setTimeout(() => shipBlock.classList.remove('hover'), 500);\n    });\n  }\n}\n\nlet gameOver = false;\nlet playerTurn;\nlet playerHits = [];\nlet computerHits = [];\nconst playerSunkShips = [];\nconst computerSunkShips = [];\n\nfunction checkScore(user, userHits, userSunkShips) {\n  function checkShip(shipName, shipLength) {\n    if (\n      userHits.filter((storedShipName) => storedShipName === shipName)\n        .length === shipLength\n    ) {\n      if (user === 'player') {\n        playerHits = userHits.filter(\n          (storedShipName) => storedShipName !== shipName,\n        );\n      }\n      if (user === 'computer') {\n        computerHits = userHits.filter(\n          (storedShipName) => storedShipName !== shipName,\n        );\n      }\n      userSunkShips.push(shipName);\n    }\n  }\n\n  checkShip('destroyer', 2);\n  checkShip('submarine', 3);\n  checkShip('cruiser', 3);\n  checkShip('battleship', 4);\n  checkShip('carrier', 5);\n\n  if (playerSunkShips.length === 5) {\n    infoDisplay.textContent = 'You WON!';\n    gameOver = true;\n  }\n  if (computerSunkShips.length === 5) {\n    infoDisplay.textContent = 'Opponent WON!';\n    gameOver = true;\n  }\n}\n\nfunction computerGo() {\n  if (!gameOver) {\n    infoDisplay.textContent = \"Opponent's turn, please wait.\";\n    setTimeout(() => {\n      const randomGo = Math.floor(Math.random() * width * width);\n      const allBoardBlocks = document.querySelectorAll('#player div');\n      if (\n        allBoardBlocks[randomGo].classList.contains('taken') &&\n        allBoardBlocks[randomGo].classList.contains('boom')\n      ) {\n        computerGo();\n      } else if (\n        allBoardBlocks[randomGo].classList.contains('taken') &&\n        !allBoardBlocks[randomGo].classList.contains('boom')\n      ) {\n        allBoardBlocks[randomGo].classList.add('boom');\n        let classes = Array.from(allBoardBlocks[randomGo].classList);\n        classes = classes.filter((className) => className !== 'block');\n        classes = classes.filter((className) => className !== 'boom');\n        classes = classes.filter((className) => className !== 'taken');\n        computerHits.push(...classes);\n        checkScore('computer', computerHits, computerSunkShips);\n      } else {\n        allBoardBlocks[randomGo].classList.add('empty');\n      }\n    }, 500);\n\n    setTimeout(() => {\n      playerTurn = true;\n      infoDisplay.textContent = 'Your turn.';\n      const allBoardBlocks = document.querySelectorAll('#computer div');\n      allBoardBlocks.forEach((block) =>\n        block.addEventListener('click', handleClick),\n      );\n    }, 1000);\n  }\n}\n\nfunction handleClick(e) {\n  if (!gameOver) {\n    if (e.target.classList.contains('taken')) {\n      e.target.classList.add('boom');\n      let classes = Array.from(e.target.classList);\n      classes = classes.filter((className) => className !== 'block');\n      classes = classes.filter((className) => className !== 'boom');\n      classes = classes.filter((className) => className !== 'taken');\n      playerHits.push(...classes);\n      checkScore('player', playerHits, playerSunkShips);\n    }\n    if (!e.target.classList.contains('taken')) {\n      e.target.classList.add('empty');\n    }\n    playerTurn = false;\n    const allBoardBlocks = document.querySelectorAll('#computer div');\n    allBoardBlocks.forEach((block) => block.replaceWith(block.cloneNode(true)));\n    setTimeout(computerGo, 500);\n  }\n}\n\nfunction startGame() {\n  if (playerTurn === undefined) {\n    if (\n      optionContainer.children.length !== 0 &&\n      document.querySelector('.option-container') !== null\n    ) {\n      infoDisplay.textContent = 'Place the ships.';\n    } else {\n      document.querySelector('#buttons').style.visibility = 'hidden';\n      const allBoardBlocks = document.querySelectorAll('#computer div');\n      allBoardBlocks.forEach((block) =>\n        block.addEventListener('click', handleClick),\n      );\n      playerTurn = true;\n      infoDisplay.textContent = 'The game has started, your turn.';\n    }\n  }\n}\n\nstartButton.addEventListener('click', startGame);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;